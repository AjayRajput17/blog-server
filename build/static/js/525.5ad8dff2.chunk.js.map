{"version":3,"file":"static/js/525.5ad8dff2.chunk.js","mappings":"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","sources":["components/Blogs/BlogCard.js","helpers/removeTags.js","components/Blogs/BlogsList.js","pages/SearchedBlogs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BiSolidBookmark } from 'react-icons/bi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Img from '../../assets/contact_app.png';\nimport { removeTags } from '../../helpers/removeTags';\nimport { BookmarkBlog } from '../../redux/slices/blogsSlice';\nimport { toast } from \"react-toastify\";\n\nconst BlogCard = ({ _id, title, content, createdAt, author, tags = null }) => {\n\n  const dispatch = useDispatch();\n  const plainContent = removeTags(content);\n\n  const { email } = useSelector((store) => store.auth.userData);\n  const { bookmarkedBlogsId, bookmarkedBlogs } = useSelector((store) => store.blog);\n  const [isBookmarked, setIsBookmarked] = useState(false);\n\n  useEffect(() => {\n    setIsBookmarked((isBookmarked) => {\n      return bookmarkedBlogsId.includes(_id)\n    })\n  }, [bookmarkedBlogsId])\n\n  const handleBookmarkButton = () => {\n    if (email) {\n      dispatch(BookmarkBlog(_id));\n    }\n    else {\n      toast.info('Please Login');\n    }\n  }\n\n  return (\n    <article className='relative w-full'>\n      <button onClick={handleBookmarkButton} className='group p-1 absolute bottom-0 right-0'>\n        <BiSolidBookmark className={`${isBookmarked ? 'text-[#1A8917] stroke-none' : 'text-white'} stroke-1 w-5 h-5 stroke-[#585858]`} />\n      </button>\n      <div className='flex flex-col items-start justify-start gap-4'>\n        <Link to={\"/author/\" + author?._id}>\n          <section className='flex flex-row items-center justify-start gap-2'>\n            <div className='text-base text-white rounded-full'>\n              {\n                author?.imgUrl\n                  ?\n                  <img src={author?.imgUrl} alt={author?.name.charAt(0)} className='w-8 h-8 rounded-full object-contain' />\n                  :\n                  <span className='bg-[#1A8917] hover:bg-[#105a0f] w-8 h-8 flex items-center justify-center rounded-full text-white font-medium text-base'>{author?.name.charAt(0)}</span>\n              }\n            </div>\n            <span className='text-sm font-semibold mr-1'>{author.name}</span>\n            <span className='text-[#c4bebe]'>&#8226;</span>\n            <span className='text-sm text-[#585858]'>{createdAt.split('T')[0]}</span>\n          </section>\n        </Link>\n        <Link to={\"/blog/\" + _id} className='w-full'>\n          <section className='flex items-center justify-between'>\n            <section className='flex flex-col items-start justify-start gap-2 mb-2'>\n              <h1 className='text-xl font-semibold'>{title}</h1>\n              <div className='line-clamp-3 text-base font-normal'>{plainContent}</div>\n            </section>\n            {/* <section className=' w-28 h-auto overflow-hidden'>\n              <img src={Img} alt=\"img\" className=' object-cover'/>\n            </section> */}\n          </section>\n        </Link>\n        <section className='flex items-center justify-start flex-wrap gap-2 w-[80%] h-auto mt-2 mb-2'>\n          {\n            tags?.map((tag) => {\n              return (\n                <>\n                  {/* <Link to={{ pathname: \"/tag\", search: `?tag=${tag.toLocaleLowerCase()}` }} >  in case of passing query in link tag */}\n                  <Link to={\"/topic/\" + tag}>\n                    <span className='px-3 py-1 text-sm rounded-full bg-[#ecebeb] text-[#3b3a3a]'>{tag}</span>\n                  </Link>\n                </>\n              )\n            })\n          }\n        </section>\n      </div>\n    </article>\n  )\n}\n\nexport default BlogCard;\n","\nexport function removeTags(str) {\n  if ((str===null) || (str===''))\n      return false;\n  else\n      str = str.toString();\n        \n  // Regular expression to identify HTML tags in\n  // the input string. Replacing the identified\n  // HTML tag with a null string.\n  return str.replace( /(<([^>]+)>)/ig, '');\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BlogCard from './BlogCard'\nimport { MdKeyboardDoubleArrowDown } from 'react-icons/md';\nimport LoadingComponent from '../LoadingComponent';\n\nconst BlogsList = ({blogsData, callback}) => {\n\n  const {blogsList, totalPages, currentPage} = blogsData;\n\n  const { loading } = useSelector((store) => store.blog);\n  const handleShowMoreButton = () => {\n    if(totalPages > currentPage){\n      callback();\n    }\n  }\n\n  return (\n    <>\n      <main className='mt-10 relative mb-10 mx-4 flex-auto md:min-w-[500px] md:max-w-[768px] flex flex-col items-start justify-start gap-6'>\n      {\n        loading && <LoadingComponent />    \n      }\n      {\n        blogsList.length > 0\n        ?\n        <>\n        {\n          blogsList?.map((blog, index) => {\n            return(\n              <>\n                <BlogCard key={blog._id} {...blog}/>\n                <div className='w-full h-[1px] bg-[#f0eeee]'></div>\n              </>\n            )\n          })\n        }\n        {\n          totalPages > currentPage\n          &&\n          <button onClick={handleShowMoreButton} className='mx-auto px-2 flex flex-col items-center justify-center text-slate-600 hover:text-[#1f83aa]'>\n            <MdKeyboardDoubleArrowDown className='text-2xl'/>\n            <div className='flex items-center justify-center text-sm font-medium'>Show More</div>\n          </button>\n        }\n        </>\n        :\n        <div className='w-full flex flex-col justify-start items-start text-base font-medium text-[#585858]'>\n          {\n            !loading\n            &&\n            <span>No Blog</span>\n          }\n        </div>\n        \n      }\n      </main>\n    </>\n  )\n}\n\nexport default BlogsList;\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useSearchParams } from 'react-router-dom'\nimport BlogsList from '../components/Blogs/BlogsList'\nimport { getBlogsByTopic, getSearchedBlogs } from '../redux/slices/blogsSlice'\n\nconst SearchedBlogs = ({type}) => {\n\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { searchedBlogs: blogsData } = useSelector((store) => store.blog);\n\n  const searchInput = searchParams.get('search');\n\n  useEffect(() => {\n    if(type === \"search\"){\n      dispatch(getSearchedBlogs({searchInput}));\n    }\n    else{\n      dispatch(getBlogsByTopic({topicName: params.name}));\n    }\n  },[searchParams, params.name, type])\n\n  const handleShowMoreButton = () => {\n    if(type === \"search\"){\n      dispatch(getSearchedBlogs({searchInput, page:blogsData.currentPage + 1}));\n    }\n    else{\n      dispatch(getBlogsByTopic({topicName: params.name, page:blogsData.currentPage + 1}));\n    }\n  }\n\n  return (\n    <div className='p-14 flex flex-col items-start justify-start gap-4'>\n      <h1 className='font-semibold tracking-wider text-3xl text-[#333131]'>Results for {params.name} {searchInput}</h1>\n      <div className='w-full h-[1px] bg-[#f0eeee] mt-6'></div>\n      <div className='flex justify-start w-full'>\n        <BlogsList blogsData={blogsData} callback={handleShowMoreButton}/>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchedBlogs;\n"],"names":["_ref","str","_id","title","content","createdAt","author","_ref$tags","tags","dispatch","useDispatch","plainContent","toString","replace","email","useSelector","store","auth","userData","_useSelector2","blog","bookmarkedBlogsId","_useState","bookmarkedBlogs","useState","_useState2","_slicedToArray","isBookmarked","setIsBookmarked","useEffect","includes","_jsxs","className","children","_jsx","onClick","BookmarkBlog","toast","info","BiSolidBookmark","concat","Link","to","imgUrl","src","alt","name","charAt","split","map","tag","_Fragment","blogsData","callback","blogsList","totalPages","currentPage","loading","LoadingComponent","length","index","BlogCard","_objectSpread","MdKeyboardDoubleArrowDown","type","params","useParams","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","searchedBlogs","searchInput","get","getSearchedBlogs","getBlogsByTopic","topicName","BlogsList","page"],"sourceRoot":""}